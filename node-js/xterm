var view=list[list.index];
var tab=list.view.find(view,'new-2');


iframe.new(tab.session.getValue(),'attach',{onload});

function onload(view){

  console.log('onload');
  
  $(view.root,'iframe').contentDocument.body.focus();
  
}//onload




<head>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@xterm/xterm/css/xterm.min.css">
<script src="https://cdn.jsdelivr.net/npm/@xterm/xterm/lib/xterm.min.js"></script>

</head>

<body>
  <div id="terminal"></div>
  <script>
  
          var term = new Terminal();
          term.open(document.getElementById('terminal'));
          
          term.prompt = () => {
              term.write('\n$ ');
          };
          
          term.writeln('This is a shell emulator.');
          term.prompt();
          
          var curr_line = '';
          
          term.onKey(function({key,domEvent:ev}){console.log(key,ev);
          
              const printable = !ev.altKey && !ev.altGraphKey && !ev.ctrlKey && !ev.metaKey;
              
              if (ev.keyCode === 13) {
                  term.prompt();
                  //console.log(curr_line);
                  curr_line = '';
              } else if (ev.keyCode === 8) {
                  if (term.x > 2) {
                      curr_line = curr_line.slice(0, -1);
                      term.write('\b \b');
                  }
              } else if (printable) {
                  curr_line += ev.key;
                  //console.log(curr_line, ev.key)
                  term.write(ev.key);
              }

              console.log(key,key.charCodeAt(0));
              child.stdin.write(key);
              
              
          });
          
          //term.on('paste', function(data) {
//              term.write(data);
//          });
          
          
          var cp      = window.parent.cp;
          var child   = cp.spawn('cmd.exe');
          
          child.stdout.on('data',data=>term.write(data));
          child.stderr.on('data',data=>term.write(data));
          child.on('exit',()=>'exit');
          
          //var cmd   = 'dir\n';
          //[...cmd].forEach(c=>child.stdin.write(c));
          

  </script>
</body>
/* node-js-tabs
{"names":["new-1","new-2"],"info":[["new-1","new-2",262,2000,"append"]]}
*/