
var view=list[list.index];
var tab=list.view.find(view,'new-2');


iframe.new(tab.session.getValue(),'attach',{onload});

function onload(view){

  console.log('onload');
  var iframe=$(view.root,'iframe');
  iframe.contentDocument.body.focus();
  iframe.style.height='500px';
  
}//onload




<head>
<style>
  html { height:100% }
  body { height:calc(100% - 16px) }
  #terminal { height:100% }
</style>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@xterm/xterm/css/xterm.min.css">
<script src="https://cdn.jsdelivr.net/npm/@xterm/xterm/lib/xterm.min.js"></script>

<!--
<script src="https://cdn.jsdelivr.net/npm/@xterm/addon-fit/lib/addon-fit.min.js"></script>
-->

</head>

<body>

  <div id="terminal"></div>
  
  <script type=module>
          import xterm from 'https://cdn.jsdelivr.net/npm/@xterm/xterm@5.5.0/+esm'
          import addonFit from 'https://cdn.jsdelivr.net/npm/@xterm/addon-fit/+esm'        

          var term;
          var fitAddon;
          
          window.onload=()=>{
          
              term        = new xterm.Terminal();
              fitAddon    = new addonFit.FitAddon();
              term.loadAddon(fitAddon);
      
              term.open(document.getElementById('terminal'));
              fitAddon.fit();          
              
              
              term.writeln('This is a shell emulator.');
          
              //term.onResize((size) => {fitAddon.fit();});



          term.onKey(function({key,domEvent:e}){
          
              var printable   = !e.altKey && !e.altGraphKey && !e.ctrlKey && !e.metaKey;

              switch(e.key){
              
                case 'Escape'       : conn.end();
                                      window.parent.nodejs.iframe.remove(window);
                                      return;
                                      
              }//switch

              stream.write(key);
              //term.write(key);
              
          });



          var stream;
          const { Client } = window.parent.require('ssh2');
          
          const conn = new Client();
          
          conn.on('ready', () => {
          
                console.log('Client :: ready');
                
                conn.shell((err, stream2) => {
                
                      if (err) throw err;
                      
                      stream    = stream2;
                      stream.on('close', () => {
                      
                            console.log('Stream :: close');
                            conn.end();
                            
                      })
                      stream.on('data', (data) => {
                      
                            term.write(data);
                            
                      });
                  
                  
                });
          });
          
          conn.connect({
                host: '127.0.0.1',
                port: 22,
                username: 'DESKTOP-1\matt-',
                password:'matt-pc-1-2023',
                privateKey:window.parent.fs.readFileSync('priv-key'),
                debug:console.log
          });
        
        


          }//onload




  </script>
</body>
/* node-js-tabs
{"names":["new-1","new-2"],"info":[["new-1","new-2",314,3050,"append"]]}
*/